 # Define the function according to your new JSON schema
        functions = [
            {
                "name": "generate_column_mapping",
                "description": "Generate a mapping between table column names and FHIR resource attribute names.",
                "parameters": json_schema
            }
        ]

        # Initial prompt
        payload = {
            "messages": [
                {
                    "role": "system",
                    "content": (
                        "You are a mapping assistant. Your task is to determine to which attribute(s) of the FHIR resource each column of the provided table corresponds. "
                        "A column can correspond to multiple attributes in FHIR resources. Do not include the data values, only provide the mapping between column names and FHIR attribute names."
                    )
                },
                {
                    "role": "system",
                    "content": (
                        "Provide your final answer as a JSON object that maps each column name to an array of corresponding FHIR attribute names, conforming to the provided JSON schema."
                    )
                },
                {"role": "system", "content": f"Profile information: {context}"},
                {"role": "user", "content": f"{query}"}
            ],
            "temperature": 0,
            "functions": functions,
            "function_call": {"name": "generate_column_mapping"}
        }

        # Send the initial request
        response = send_request(payload, GPT4V_ENDPOINT)

        # Process the response
        response_message = response['choices'][0]['message']
        if 'function_call' in response_message:
            response_content = response_message['function_call']['arguments']
        else:
            response_content = response_message['content']

        # Prompts for reflection using Mixture of Prompts (MoP)
        prompts = [
            "Reflect on this mapping. Identify any inconsistencies, possible improvements, or errors.",
            "Please verify the correctness of the mapping and identify any areas for improvement.",
            "Review the mapping and check for any possible errors or misalignments with the FHIR schema."
        ]

        reflections = []  # Store reflections for later aggregation
        iterations = 3  # Number of reflection rounds

        for i in range(iterations):
            for prompt in prompts:
                reflection_payload = {
                    "messages": [
                        {"role": "system", "content": f"Iteration {i+1}: You provided the following mapping:"},
                        {"role": "assistant", "content": response_content},
                        {
                            "role": "system",
                            "content": (
                                f"{prompt} Present your final answer as a JSON object that conforms to the provided JSON schema."
                            )
                        }
                    ],
                    "temperature": 0,
                    "functions": functions,
                    "function_call": {"name": "generate_column_mapping"}
                }

    data = load_data("Fase3/data_mock/" + filename + "_mock.csv")  # Cargar los datos tabulares desde un archivo CSV
    desc = get_description(filename).lower()  # Obtener y convertir la descripción a minúsculas
    proccessed_desc = preprocess_text(desc)  # Procesar la descripción

    # Crear la consulta con los datos tabulares y la descripción
    query = f"""The tabular data I would like to know the columns mapping is : {data}, this table is described as {proccessed_desc}. Tell me to which attribute of the FHIR resource each column belongs, try to be as specific as you can. And ensure to map as attributes as you can"""
